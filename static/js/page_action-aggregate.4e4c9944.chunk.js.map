{"version":3,"file":"static/js/page_action-aggregate.4e4c9944.chunk.js","mappings":"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","sources":["../node_modules/@newrelic/browser-agent/dist/esm/common/harvest/harvest-scheduler.js","../node_modules/@newrelic/browser-agent/dist/esm/common/unload/eol.js","../node_modules/@newrelic/browser-agent/dist/esm/features/page_action/aggregate/index.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as submitData from '../util/submit-data';\nimport { SharedContext } from '../context/shared-context';\nimport { Harvest } from './harvest';\nimport { subscribeToEOL } from '../unload/eol';\nimport { SESSION_EVENTS } from '../session/session-entity';\n\n/**\n * Periodically invokes harvest calls and handles retries\n */\nexport class HarvestScheduler extends SharedContext {\n  /**\n     * Create a HarvestScheduler\n     * @param {string} endpoint - The base BAM endpoint name -- ex. 'events'\n     * @param {object} opts - The options used to configure the HarvestScheduler\n     * @param {Function} opts.onFinished - The callback to be fired when a harvest has finished\n     * @param {Function} opts.getPayload - A callback which can be triggered to return a payload for harvesting\n     * @param {number} opts.retryDelay - The number of seconds to wait before retrying after a network failure\n     * @param {boolean} opts.raw - Use a prefabricated payload shape as the harvest payload without the need for formatting\n     * @param {string} opts.customUrl - A custom url that falls outside of the shape of the standard BAM harvester url pattern.  Will use directly instead of concatenating various pieces\n     * @param {*} parent - The parent object, whose state can be passed into SharedContext\n     */\n  constructor(endpoint, opts, parent) {\n    super(parent); // gets any allowed properties from the parent and stores them in `sharedContext`\n    this.endpoint = endpoint;\n    this.opts = opts || {};\n    this.started = false;\n    this.timeoutHandle = null;\n    this.aborted = false; // this controls the per-interval and final harvests for the scheduler (currently per feature specific!)\n\n    this.harvest = new Harvest(this.sharedContext);\n\n    // unload if EOL mechanism fires\n    subscribeToEOL(this.unload.bind(this));\n\n    /* Flush all buffered data if session resets and give up retries. This should be synchronous to ensure that the correct `session` value is sent.\n      Since session-reset generates a new session ID and the ID is grabbed at send-time, any delays or retries would cause the payload to be sent under\n      the wrong session ID. */\n    this.sharedContext?.ee.on(SESSION_EVENTS.RESET, () => this.runHarvest({\n      forceNoRetry: true\n    }));\n  }\n\n  /**\n   * This function is only meant for the last outgoing harvest cycle of a page. It trickles down to using sendBeacon, which should not be used\n   * to send payloads while the page is still active, due to limitations on how much data can be buffered in the API at any one time.\n   */\n  unload() {\n    if (this.aborted) return;\n    // If opts.onUnload is defined, these are special actions to execute before attempting to send the final payload.\n    if (this.opts.onUnload) this.opts.onUnload();\n    this.runHarvest({\n      unload: true\n    });\n  }\n  startTimer(interval, initialDelay) {\n    this.interval = interval;\n    this.started = true;\n    this.scheduleHarvest(initialDelay != null ? initialDelay : this.interval);\n  }\n  stopTimer() {\n    let permanently = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.aborted = permanently; // stopping permanently is same as aborting, but this function also cleans up the setTimeout loop\n    this.started = false;\n    if (this.timeoutHandle) {\n      clearTimeout(this.timeoutHandle);\n    }\n  }\n  scheduleHarvest(delay, opts) {\n    if (this.timeoutHandle) return;\n    if (delay == null) {\n      delay = this.interval;\n    }\n    this.timeoutHandle = setTimeout(() => {\n      this.timeoutHandle = null;\n      this.runHarvest(opts);\n    }, delay * 1000);\n  }\n  runHarvest(opts) {\n    if (this.aborted) return;\n\n    /**\n     * This is executed immediately after harvest sends the data via XHR, or if there's nothing to send. Note that this excludes on unloading / sendBeacon.\n     * @param {Object} result\n     */\n    const cbRanAfterSend = result => {\n      if (opts?.forceNoRetry) result.retry = false; // discard unsent data rather than re-queuing for next harvest attempt\n      this.onHarvestFinished(opts, result);\n    };\n    let harvests = [];\n    let submitMethod;\n    let payload;\n    if (this.opts.getPayload) {\n      // Ajax & PVT & SR features provide a callback function to get data for harvesting\n      submitMethod = submitData.getSubmitMethod({\n        isFinalHarvest: opts?.unload\n      });\n      if (!submitMethod) return false;\n      const retry = !opts?.unload && submitMethod === submitData.xhr;\n      payload = this.opts.getPayload({\n        retry\n      });\n      if (!payload) {\n        if (this.started) {\n          this.scheduleHarvest();\n        }\n        return;\n      }\n      payload = Object.prototype.toString.call(payload) === '[object Array]' ? payload : [payload];\n      harvests.push(...payload);\n    }\n\n    /** sendX is used for features that do not supply a preformatted payload via \"getPayload\" */\n    let send = args => this.harvest.sendX(args);\n    if (harvests.length) {\n      /** _send is the underlying method for sending in the harvest, if sending raw we can bypass the other helpers completely which format the payloads */\n      if (this.opts.raw) send = args => this.harvest._send(args);\n      /** send is used to formated the payloads from \"getPayload\" and obfuscate before sending */else send = args => this.harvest.send(args);\n    } else {\n      // force it to run at least once in sendX mode\n      harvests.push(undefined);\n    }\n    harvests.forEach(payload => {\n      send({\n        endpoint: this.endpoint,\n        payload,\n        opts,\n        submitMethod,\n        cbFinished: cbRanAfterSend,\n        customUrl: this.opts.customUrl,\n        raw: this.opts.raw\n      });\n    });\n    if (this.started) {\n      this.scheduleHarvest();\n    }\n  }\n  onHarvestFinished(opts, result) {\n    if (this.opts.onFinished) {\n      this.opts.onFinished(result);\n    }\n    if (result.sent && result.retry) {\n      const delay = result.delay || this.opts.retryDelay;\n      // reschedule next harvest if should be delayed longer\n      if (this.started && delay) {\n        clearTimeout(this.timeoutHandle);\n        this.timeoutHandle = null;\n        this.scheduleHarvest(delay, opts);\n      } else if (!this.started && delay) {\n        // if not running on a timer, schedule a single retry\n        this.scheduleHarvest(delay, opts);\n      }\n    }\n  }\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { windowAddEventListener } from '../event-listener/event-listener-opts';\nimport { globalScope, isWorkerScope, isBrowserScope } from '../constants/runtime';\nimport { subscribeToVisibilityChange } from '../window/page-visibility';\nif (isWorkerScope) {\n  globalScope.cleanupTasks = []; // create new list on WorkerGlobalScope to track funcs to run before exiting thread\n\n  const origClose = globalScope.close;\n  globalScope.close = () => {\n    // on worker's EoL signal, execute all \"listeners\", e.g. final harvests\n    for (let task of globalScope.cleanupTasks) {\n      task();\n    }\n    origClose();\n  };\n}\n\n/**\n * Subscribes a provided callback to the time/event when the agent should treat it as end-of-life.\n * This is used, for example, to submit a final harvest and send all remaining data on best-effort.\n * @param {function} cb - func to run before or during the last reliable event or time of an env's life span\n */\nexport function subscribeToEOL(cb) {\n  if (isBrowserScope) {\n    subscribeToVisibilityChange(cb, true); // when user switches tab or hides window, esp. mobile scenario\n    windowAddEventListener('pagehide', cb); // when user navigates away, and because safari iOS v14.4- doesn't fully support vis change\n    // --this ought to be removed once support for version below 14.5 phases out\n  } else if (isWorkerScope) {\n    globalScope.cleanupTasks.push(cb); // close() should run these tasks before quitting thread\n  }\n  // By default (for other env), this fn has no effect.\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mapOwn } from '../../../common/util/map-own';\nimport { stringify } from '../../../common/util/stringify';\nimport { registerHandler as register } from '../../../common/event-emitter/register-handler';\nimport { HarvestScheduler } from '../../../common/harvest/harvest-scheduler';\nimport { cleanURL } from '../../../common/url/clean-url';\nimport { getConfigurationValue, getInfo, getRuntime } from '../../../common/config/config';\nimport { FEATURE_NAME } from '../constants';\nimport { isBrowserScope } from '../../../common/constants/runtime';\nimport { AggregateBase } from '../../utils/aggregate-base';\nexport class Aggregate extends AggregateBase {\n  static featureName = FEATURE_NAME;\n  constructor(agentIdentifier, aggregator) {\n    var _this;\n    super(agentIdentifier, aggregator, FEATURE_NAME);\n    _this = this;\n    this.eventsPerMinute = 240;\n    this.harvestTimeSeconds = getConfigurationValue(this.agentIdentifier, 'page_action.harvestTimeSeconds') || getConfigurationValue(this.agentIdentifier, 'ins.harvestTimeSeconds') || 30;\n    this.eventsPerHarvest = this.eventsPerMinute * this.harvestTimeSeconds / 60;\n    this.referrerUrl = undefined;\n    this.currentEvents = undefined;\n    this.events = [];\n    this.att = getInfo(this.agentIdentifier).jsAttributes; // per-agent, aggregators-shared info context\n\n    if (isBrowserScope && document.referrer) this.referrerUrl = cleanURL(document.referrer);\n    register('api-addPageAction', function () {\n      return _this.addPageAction(...arguments);\n    }, this.featureName, this.ee);\n    this.waitForFlags(['ins']).then(_ref => {\n      let [enabled] = _ref;\n      if (enabled) {\n        const scheduler = new HarvestScheduler('ins', {\n          onFinished: function () {\n            return _this.onHarvestFinished(...arguments);\n          }\n        }, this);\n        scheduler.harvest.on('ins', function () {\n          return _this.onHarvestStarted(...arguments);\n        });\n        scheduler.startTimer(this.harvestTimeSeconds, 0);\n      } else {\n        this.blocked = true;\n      }\n    });\n    this.drain();\n  }\n  onHarvestStarted(options) {\n    const {\n      userAttributes,\n      atts\n    } = getInfo(this.agentIdentifier);\n    var payload = {\n      qs: {\n        ua: userAttributes,\n        at: atts\n      },\n      body: {\n        ins: this.events\n      }\n    };\n    if (options.retry) {\n      this.currentEvents = this.events;\n    }\n    this.events = [];\n    return payload;\n  }\n  onHarvestFinished(result) {\n    if (result && result.sent && result.retry && this.currentEvents) {\n      this.events = this.events.concat(this.currentEvents);\n      this.currentEvents = null;\n    }\n  }\n\n  // WARNING: Insights times are in seconds. EXCEPT timestamp, which is in ms.\n  addPageAction(t, name, attributes) {\n    if (this.events.length >= this.eventsPerHarvest || this.blocked) return;\n    var width;\n    var height;\n    var eventAttributes = {};\n    if (isBrowserScope && window.document.documentElement) {\n      // Doesn't include the nav bar when it disappears in mobile safari\n      // https://github.com/jquery/jquery/blob/10399ddcf8a239acc27bdec9231b996b178224d3/src/dimensions.js#L23\n      width = window.document.documentElement.clientWidth;\n      height = window.document.documentElement.clientHeight;\n    }\n    var defaults = {\n      timestamp: t + getRuntime(this.agentIdentifier).offset,\n      timeSinceLoad: t / 1000,\n      browserWidth: width,\n      browserHeight: height,\n      referrerUrl: this.referrerUrl,\n      currentUrl: cleanURL('' + location),\n      pageUrl: cleanURL(getRuntime(this.agentIdentifier).origin),\n      eventType: 'PageAction'\n    };\n    mapOwn(defaults, set);\n    mapOwn(getInfo(this.agentIdentifier).jsAttributes, set);\n    if (attributes && typeof attributes === 'object') {\n      mapOwn(attributes, set);\n    }\n    eventAttributes.actionName = name || '';\n    this.events.push(eventAttributes);\n    function set(key, val) {\n      eventAttributes[key] = val && typeof val === 'object' ? stringify(val) : val;\n    }\n  }\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["HarvestScheduler","_SharedContext","_inherits","_super","_createSuper","endpoint","opts","parent","_this$sharedContext","_this","_classCallCheck","call","started","timeoutHandle","aborted","harvest","Harvest","sharedContext","subscribeToEOL","unload","bind","_assertThisInitialized","ee","on","SESSION_EVENTS","RESET","runHarvest","forceNoRetry","_createClass","key","value","this","onUnload","interval","initialDelay","scheduleHarvest","permanently","arguments","length","undefined","clearTimeout","delay","_this2","setTimeout","_this3","submitMethod","payload","cbRanAfterSend","result","retry","onHarvestFinished","harvests","getPayload","submitData","isFinalHarvest","Object","prototype","toString","push","apply","_toConsumableArray","send","args","sendX","raw","_send","forEach","cbFinished","customUrl","onFinished","sent","retryDelay","SharedContext","isWorkerScope","globalScope","cleanupTasks","origClose","close","_step","_iterator","_createForOfIteratorHelper","s","n","done","task","err","e","f","cb","isBrowserScope","subscribeToVisibilityChange","windowAddEventListener","Aggregate","_AggregateBase","agentIdentifier","aggregator","FEATURE_NAME","eventsPerMinute","harvestTimeSeconds","getConfigurationValue","eventsPerHarvest","referrerUrl","currentEvents","events","att","getInfo","jsAttributes","document","referrer","cleanURL","register","addPageAction","featureName","waitForFlags","then","_ref","_slicedToArray","scheduler","_this4","_this5","onHarvestStarted","startTimer","blocked","drain","options","_getInfo","qs","ua","userAttributes","at","atts","body","ins","concat","t","name","attributes","width","height","eventAttributes","window","documentElement","clientWidth","clientHeight","defaults","timestamp","getRuntime","offset","timeSinceLoad","browserWidth","browserHeight","currentUrl","location","pageUrl","origin","eventType","mapOwn","set","actionName","val","stringify","AggregateBase","_defineProperty","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","_e","TypeError","normalCompletion","didErr","step","next","_e2"],"sourceRoot":""}