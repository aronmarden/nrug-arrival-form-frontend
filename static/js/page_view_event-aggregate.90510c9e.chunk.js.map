{"version":3,"file":"static/js/page_view_event-aggregate.90510c9e.chunk.js","mappings":"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","sources":["../node_modules/@newrelic/browser-agent/dist/esm/common/vitals/time-to-first-byte.js","../node_modules/@newrelic/browser-agent/dist/esm/features/page_view_event/aggregate/initialized-features.js","../node_modules/@newrelic/browser-agent/dist/esm/features/page_view_event/aggregate/index.js"],"sourcesContent":["import { globalScope, isBrowserScope, isiOS, offset } from '../constants/runtime';\nimport { VITAL_NAMES } from './constants';\nimport { VitalMetric } from './vital-metric';\nimport { onTTFB } from 'web-vitals';\nexport const timeToFirstByte = new VitalMetric(VITAL_NAMES.TIME_TO_FIRST_BYTE);\nif (isBrowserScope && typeof PerformanceNavigationTiming !== 'undefined' && !isiOS) {\n  onTTFB(_ref => {\n    let {\n      value,\n      entries\n    } = _ref;\n    if (!timeToFirstByte.isValid) timeToFirstByte.update({\n      value,\n      entries\n    });\n  });\n} else {\n  if (!timeToFirstByte.isValid) {\n    const entry = {};\n    // convert real timestamps to relative timestamps to match web-vitals behavior\n    for (let key in globalScope?.performance?.timing || {}) entry[key] = Math.max(globalScope?.performance?.timing[key] - offset, 0);\n\n    // ttfb is equiv to document's responseStart property in timing API --> https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/responseStart\n    timeToFirstByte.update({\n      value: entry.responseStart,\n      entries: [entry]\n    });\n  }\n}","import { FEATURE_NAMES } from '../../../loaders/features/features';\nimport { gosNREUM } from '../../../common/window/nreum';\n\n/**\n * Get an array of flags required by downstream (NR UI) based on the features initialized in this agent\n * (aka what is running on the page).\n * @param {String} agentId - the ID of the initialized agent on the page, mapping to the one under the global 'newrelic' object\n * @returns {String[]} Up to 5 short strings corresponding to ingest mapping of features.\n */\nexport function getActivatedFeaturesFlags(agentId) {\n  const flagArr = [];\n  const newrelic = gosNREUM();\n  try {\n    Object.keys(newrelic.initializedAgents[agentId].features).forEach(featName => {\n      switch (featName) {\n        case FEATURE_NAMES.ajax:\n          flagArr.push('xhr');\n          break;\n        case FEATURE_NAMES.jserrors:\n          flagArr.push('err');\n          break;\n        case FEATURE_NAMES.pageAction:\n          flagArr.push('ins');\n          break;\n        case FEATURE_NAMES.sessionTrace:\n          flagArr.push('stn');\n          break;\n        case FEATURE_NAMES.spa:\n          flagArr.push('spa');\n          break;\n      }\n    });\n  } catch (e) {}\n  return flagArr;\n}\n\n// Note: this module and the \"af\" param in src/features/page_view_event/aggregate/index.js can be removed in the future at such time\n// that it's no longer being used. For the browser agent, this is an unused flag system.","import { globalScope, isBrowserScope } from '../../../common/constants/runtime';\nimport { addPT, addPN } from '../../../common/timing/nav-timing';\nimport { stringify } from '../../../common/util/stringify';\nimport { getInfo, getRuntime } from '../../../common/config/config';\nimport { Harvest } from '../../../common/harvest/harvest';\nimport * as CONSTANTS from '../constants';\nimport { getActivatedFeaturesFlags } from './initialized-features';\nimport { activateFeatures } from '../../../common/util/feature-flags';\nimport { warn } from '../../../common/util/console';\nimport { AggregateBase } from '../../utils/aggregate-base';\nimport { firstContentfulPaint } from '../../../common/vitals/first-contentful-paint';\nimport { firstPaint } from '../../../common/vitals/first-paint';\nimport { timeToFirstByte } from '../../../common/vitals/time-to-first-byte';\nexport class Aggregate extends AggregateBase {\n  static featureName = CONSTANTS.FEATURE_NAME;\n  constructor(agentIdentifier, aggregator) {\n    super(agentIdentifier, aggregator, CONSTANTS.FEATURE_NAME);\n    this.timeToFirstByte = 0;\n    this.firstByteToWindowLoad = 0; // our \"frontend\" duration\n    this.firstByteToDomContent = 0; // our \"dom processing\" duration\n\n    if (isBrowserScope) {\n      timeToFirstByte.subscribe(_ref => {\n        let {\n          value,\n          entries\n        } = _ref;\n        const navEntry = entries[0];\n        this.timeToFirstByte = Math.max(value, this.timeToFirstByte);\n        this.firstByteToWindowLoad = Math.max(Math.round(navEntry.loadEventEnd - this.timeToFirstByte), this.firstByteToWindowLoad); // our \"frontend\" duration\n        this.firstByteToDomContent = Math.max(Math.round(navEntry.domContentLoadedEventEnd - this.timeToFirstByte), this.firstByteToDomContent); // our \"dom processing\" duration\n\n        this.sendRum();\n      });\n    } else {\n      // worker agent build does not get TTFB values, use default 0 values\n      this.sendRum();\n    }\n  }\n  sendRum() {\n    const info = getInfo(this.agentIdentifier);\n    const agentRuntime = getRuntime(this.agentIdentifier);\n    const harvester = new Harvest(this);\n    if (!info.beacon) return;\n    if (info.queueTime) this.aggregator.store('measures', 'qt', {\n      value: info.queueTime\n    });\n    if (info.applicationTime) this.aggregator.store('measures', 'ap', {\n      value: info.applicationTime\n    });\n\n    // These 3 values should've been recorded after load and before this func runs. They are part of the minimum required for PageView events to be created.\n    // Following PR #428, which demands that all agents send RUM call, these need to be sent even outside of the main window context where PerformanceTiming\n    // or PerformanceNavigationTiming do not exists. Hence, they'll be filled in by 0s instead in, for example, worker threads that still init the PVE module.\n    this.aggregator.store('measures', 'be', {\n      value: this.timeToFirstByte\n    });\n    this.aggregator.store('measures', 'fe', {\n      value: this.firstByteToWindowLoad\n    });\n    this.aggregator.store('measures', 'dc', {\n      value: this.firstByteToDomContent\n    });\n    const queryParameters = {\n      tt: info.ttGuid,\n      us: info.user,\n      ac: info.account,\n      pr: info.product,\n      af: getActivatedFeaturesFlags(this.agentIdentifier).join(','),\n      ...Object.entries(this.aggregator.get('measures') || {}).reduce((aggregator, _ref2) => {\n        let [metricName, measure] = _ref2;\n        aggregator[metricName] = measure.params?.value;\n        return aggregator;\n      }, {}),\n      xx: info.extra,\n      ua: info.userAttributes,\n      at: info.atts\n    };\n    if (agentRuntime.session) queryParameters.fsh = Number(agentRuntime.session.isNew); // \"first session harvest\" aka RUM request or PageView event of a session\n\n    let body;\n    if (typeof info.jsAttributes === 'object' && Object.keys(info.jsAttributes).length > 0) {\n      body = {\n        ja: info.jsAttributes\n      };\n    }\n    if (globalScope.performance) {\n      if (typeof PerformanceNavigationTiming !== 'undefined') {\n        // Navigation Timing level 2 API that replaced PerformanceTiming & PerformanceNavigation\n        const navTimingEntry = globalScope?.performance?.getEntriesByType('navigation')?.[0];\n        const perf = {\n          timing: addPT(agentRuntime.offset, navTimingEntry, {}),\n          navigation: addPN(navTimingEntry, {})\n        };\n        queryParameters.perf = stringify(perf);\n      } else if (typeof PerformanceTiming !== 'undefined') {\n        // Safari pre-15 did not support level 2 timing\n        const perf = {\n          timing: addPT(agentRuntime.offset, globalScope.performance.timing, {}, true),\n          navigation: addPN(globalScope.performance.navigation, {})\n        };\n        queryParameters.perf = stringify(perf);\n      }\n    }\n    queryParameters.fp = firstPaint.current.value;\n    queryParameters.fcp = firstContentfulPaint.current.value;\n    harvester.send({\n      endpoint: 'rum',\n      payload: {\n        qs: queryParameters,\n        body\n      },\n      opts: {\n        needResponse: true,\n        sendEmptyBody: true\n      },\n      cbFinished: _ref3 => {\n        let {\n          status,\n          responseText\n        } = _ref3;\n        if (status >= 400) {\n          // Adding retry logic for the rum call will be a separate change\n          this.ee.abort();\n          return;\n        }\n        try {\n          activateFeatures(JSON.parse(responseText), this.agentIdentifier);\n          this.drain();\n        } catch (err) {\n          this.ee.abort();\n          warn('RUM call failed. Agent shutting down.');\n        }\n      }\n    });\n  }\n}"],"names":["timeToFirstByte","VitalMetric","VITAL_NAMES","TIME_TO_FIRST_BYTE","isBrowserScope","PerformanceNavigationTiming","isiOS","onTTFB","_ref","value","entries","isValid","update","entry","key","globalScope","_globalScope$performa","performance","timing","_globalScope$performa2","Math","max","offset","responseStart","getActivatedFeaturesFlags","agentId","flagArr","newrelic","gosNREUM","Object","keys","initializedAgents","features","forEach","featName","FEATURE_NAMES","ajax","push","jserrors","pageAction","sessionTrace","spa","e","Aggregate","_AggregateBase","_inherits","_super","_createSuper","agentIdentifier","aggregator","_this","_classCallCheck","call","CONSTANTS","firstByteToWindowLoad","firstByteToDomContent","subscribe","navEntry","round","loadEventEnd","domContentLoadedEventEnd","sendRum","_createClass","_this2","info","getInfo","this","agentRuntime","getRuntime","harvester","Harvest","beacon","queueTime","store","applicationTime","body","queryParameters","_objectSpread","tt","ttGuid","us","user","ac","account","pr","product","af","join","get","reduce","_ref2","_measure$params","_ref4","_slicedToArray","metricName","measure","params","xx","extra","ua","userAttributes","at","atts","session","fsh","Number","isNew","jsAttributes","length","ja","navTimingEntry","getEntriesByType","perf","addPT","navigation","addPN","stringify","PerformanceTiming","fp","firstPaint","current","fcp","firstContentfulPaint","send","endpoint","payload","qs","opts","needResponse","sendEmptyBody","cbFinished","_ref3","status","responseText","ee","abort","activateFeatures","JSON","parse","drain","err","warn","AggregateBase","_defineProperty"],"sourceRoot":""}