{"version":3,"file":"static/js/ajax-aggregate.18ce3ee6.chunk.js","mappings":"iNAIIA,EAAW,GAOR,SAASC,EAAmBC,GACjC,GAAwB,IAApBF,EAASG,OACX,OAAO,EAIT,QAAwBC,IAApBF,EAAOG,SACT,OAAO,EAET,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAASG,OAAQG,IAAK,CACxC,IAAIC,EAASP,EAASM,GACtB,GAAwB,MAApBC,EAAOF,SACT,OAAO,EAET,GAAIG,EAAqBD,EAAOF,SAAUH,EAAOG,WAAaI,EAAYF,EAAOG,SAAUR,EAAOQ,UAChG,OAAO,CAEX,CACA,OAAO,CACT,CAMO,SAASC,EAAYC,GAE1B,GADAZ,EAAW,GACNY,GAAmBA,EAAeT,OAGvC,IAAK,IAAIG,EAAI,EAAGA,EAAIM,EAAeT,OAAQG,IAAK,CAC9C,IAAIO,EAAMD,EAAeN,GACzB,GAAKO,EAAL,CAE+B,IAA3BA,EAAIC,QAAQ,WACdD,EAAMA,EAAIE,UAAU,GACiB,IAA5BF,EAAIC,QAAQ,cACrBD,EAAMA,EAAIE,UAAU,IAEtB,IAAMC,EAAaH,EAAIC,QAAQ,KAC3BG,OAAI,EAAEP,OAAQ,EACdM,EAAa,GACfC,EAAOJ,EAAIE,UAAU,EAAGC,GACxBN,EAAWG,EAAIE,UAAUC,KAEzBC,EAAOJ,EACPH,EAAW,IAEb,IAAAQ,EAAiBD,EAAKE,MAAM,KAAvBd,GAA2Be,EAAAA,EAAAA,GAAAF,EAAA,GAAnB,GACblB,EAASqB,KAAK,CACZhB,SAAAA,EACAK,SAAAA,GAnBgB,CAqBpB,CACF,CAOA,SAASF,EAAqBc,EAASC,GACrC,QAAID,EAAQnB,OAASoB,EAAOpB,SAGrBoB,EAAOT,QAAQQ,KAAaC,EAAOpB,OAASmB,EAAQnB,MAC7D,CAQA,SAASM,EAAYa,EAASE,GAS5B,OAR6B,IAAzBF,EAAQR,QAAQ,OAClBQ,EAAUA,EAAQP,UAAU,IAEJ,IAAtBS,EAAKV,QAAQ,OACfU,EAAOA,EAAKT,UAAU,IAIR,KAAZO,GAGGA,IAAYE,CACrB,C,wKCpFaC,EAAgB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAY3B,SAAAA,EAAYK,EAAUC,EAAMC,GAAQ,IAAAC,EAAAC,EAkB9B,OAlB8BC,EAAAA,EAAAA,GAAA,KAAAV,IAClCS,EAAAN,EAAAQ,KAAA,KAAMJ,IACDF,SAAWA,EAChBI,EAAKH,KAAOA,GAAQ,CAAC,EACrBG,EAAKG,SAAU,EACfH,EAAKI,cAAgB,KACrBJ,EAAKK,SAAU,EAEfL,EAAKM,QAAU,IAAIC,EAAAA,EAAQP,EAAKQ,gBAGhCC,EAAAA,EAAAA,GAAeT,EAAKU,OAAOC,MAAIC,EAAAA,EAAAA,GAAAZ,KAKb,QAAlBD,EAAAC,EAAKQ,qBAAa,IAAAT,GAAlBA,EAAoBc,GAAGC,GAAGC,EAAAA,GAAeC,OAAO,kBAAMhB,EAAKiB,WAAW,CACpEC,cAAc,GACd,IAAElB,CACN,CAgHC,OA9GDmB,EAAAA,EAAAA,GAAA5B,EAAA,EAAA6B,IAAA,SAAAC,MAIA,WACMC,KAAKjB,UAELiB,KAAKzB,KAAK0B,UAAUD,KAAKzB,KAAK0B,WAClCD,KAAKL,WAAW,CACdP,QAAQ,IAEZ,GAAC,CAAAU,IAAA,aAAAC,MACD,SAAWG,EAAUC,GACnBH,KAAKE,SAAWA,EAChBF,KAAKnB,SAAU,EACfmB,KAAKI,gBAAgC,MAAhBD,EAAuBA,EAAeH,KAAKE,SAClE,GAAC,CAAAJ,IAAA,YAAAC,MACD,WACE,IAAIM,EAAcC,UAAU3D,OAAS,QAAsBC,IAAjB0D,UAAU,IAAmBA,UAAU,GACjFN,KAAKjB,QAAUsB,EACfL,KAAKnB,SAAU,EACXmB,KAAKlB,eACPyB,aAAaP,KAAKlB,cAEtB,GAAC,CAAAgB,IAAA,kBAAAC,MACD,SAAgBS,EAAOjC,GAAM,IAAAkC,EAAA,KACvBT,KAAKlB,gBACI,MAAT0B,IACFA,EAAQR,KAAKE,UAEfF,KAAKlB,cAAgB4B,YAAW,WAC9BD,EAAK3B,cAAgB,KACrB2B,EAAKd,WAAWpB,EAClB,GAAW,IAARiC,GACL,GAAC,CAAAV,IAAA,aAAAC,MACD,SAAWxB,GAAM,IAAAoC,EAAA,KACf,IAAIX,KAAKjB,QAAT,CAMA,IAKI6B,EACAC,EANEC,EAAiB,SAAAC,GACb,OAAJxC,QAAI,IAAJA,GAAAA,EAAMqB,eAAcmB,EAAOC,OAAQ,GACvCL,EAAKM,kBAAkB1C,EAAMwC,EAC/B,EACIG,EAAW,GAGf,GAAIlB,KAAKzB,KAAK4C,WAAY,CAKxB,KAHAP,EAAeQ,EAAAA,GAA2B,CACxCC,eAAoB,OAAJ9C,QAAI,IAAJA,OAAI,EAAJA,EAAMa,UAEL,OAAO,EAC1B,IAAM4B,IAAa,OAAJzC,QAAI,IAAJA,GAAAA,EAAMa,SAAUwB,IAAiBQ,EAAAA,GAIhD,KAHAP,EAAUb,KAAKzB,KAAK4C,WAAW,CAC7BH,MAAAA,KAMA,YAHIhB,KAAKnB,SACPmB,KAAKI,mBAITS,EAAsD,mBAA5CS,OAAOC,UAAUC,SAAS5C,KAAKiC,GAAgCA,EAAU,CAACA,GACpFK,EAASrD,KAAI4D,MAAbP,GAAQQ,EAAAA,EAAAA,GAASb,GACnB,CAGA,IAAIc,EAAO,SAAAC,GAAI,OAAIjB,EAAK3B,QAAQ6C,MAAMD,EAAK,EACvCV,EAASvE,OAEQgF,EAAf3B,KAAKzB,KAAKuD,IAAY,SAAAF,GAAI,OAAIjB,EAAK3B,QAAQ+C,MAAMH,EAAK,EAC6C,SAAAA,GAAI,OAAIjB,EAAK3B,QAAQ2C,KAAKC,EAAK,EAGtIV,EAASrD,UAAKjB,GAEhBsE,EAASc,SAAQ,SAAAnB,GACfc,EAAK,CACHrD,SAAUqC,EAAKrC,SACfuC,QAAAA,EACAtC,KAAAA,EACAqC,aAAAA,EACAqB,WAAYnB,EACZoB,UAAWvB,EAAKpC,KAAK2D,UACrBJ,IAAKnB,EAAKpC,KAAKuD,KAEnB,IACI9B,KAAKnB,SACPmB,KAAKI,iBAvDiB,CAyD1B,GAAC,CAAAN,IAAA,oBAAAC,MACD,SAAkBxB,EAAMwC,GAItB,GAHIf,KAAKzB,KAAK4D,YACZnC,KAAKzB,KAAK4D,WAAWpB,GAEnBA,EAAOqB,MAAQrB,EAAOC,MAAO,CAC/B,IAAMR,EAAQO,EAAOP,OAASR,KAAKzB,KAAK8D,WAEpCrC,KAAKnB,SAAW2B,GAClBD,aAAaP,KAAKlB,eAClBkB,KAAKlB,cAAgB,KACrBkB,KAAKI,gBAAgBI,EAAOjC,KAClByB,KAAKnB,SAAW2B,GAE1BR,KAAKI,gBAAgBI,EAAOjC,EAEhC,CACF,KAACN,CAAA,CA/I0B,CAASqE,EAAAA,E,kKCNlCC,EAAajB,OAAOC,UAAUiB,eAC9BC,EAAiB,GACd,SAASC,EAASC,EAAKC,EAAIC,GAChC,OAAOF,GAAe,IAARA,GAAqB,KAARA,EAAaC,EAAGD,IAAQE,EAAQ,IAAM,IAAM,GACzE,CACO,SAASC,EAAQC,EAAGC,GACzB,OAAIA,EACKC,KAAKC,MAAMH,GAAGvB,SAAS,SAEnB5E,IAANmG,GAAyB,IAANA,EAAU,GAAKE,KAAKC,MAAMH,GAAGvB,SAAS,GAClE,CACO,SAAS2B,EAAoBC,GAElC,IAAIC,EAAc/B,OAAOkB,eAAe,UAAYlB,OAAOgC,OAAO,MAAQ,CAAC,EACvEC,EAAiB,EACrB,OACA,SAAmBC,GACjB,GAAmB,qBAARA,GAA+B,KAARA,EAAY,MAAO,GACrD,IAAIC,EAAa,IAAIC,EAAAA,GAAW,CAC9BN,gBAAAA,IAEFI,EAAMG,OAAOH,GACTC,EAAWG,oBAAmBJ,EAAMC,EAAWI,gBAAgBL,IACnE,OAAIjB,EAAW3D,KAAKyE,EAAaG,GACxBV,EAAQO,EAAYG,IAAM,IAEjCH,EAAYG,GAAOD,IA2CzB,SAAqBC,GACnB,MAAO,IAAMA,EAAIM,QAAQC,EAAW,OACtC,CA5CaC,CAAYR,GAEvB,CACF,CACO,SAASS,EAAoBC,EAAOC,GACzC,IAAIC,EAAY,GAkChB,OAjCAC,EAAAA,EAAAA,GAAOH,GAAO,SAAUpE,EAAK6C,GAC3B,KAAIyB,EAAUzH,QAAU8F,GAAxB,CACA,IACI6B,EADAC,EAAO,EAIX,OADAzE,EAAMqE,EAAUrE,UACD6C,GACb,IAAK,SACCA,EAEF2B,EAAkBH,GAAUK,EAAAA,EAAAA,GAAU7B,IAGtC4B,EAAO,EAET,MACF,IAAK,SACHA,EAAO,EAEPD,EAAkB3B,EAAM,EAAIA,EAAMA,EAAM,IACxC,MACF,IAAK,UACH4B,EAAO5B,EAAM,EAAI,EACjB,MACF,IAAK,YAEH4B,EAAO,EACP,MACF,QACED,EAAkBH,EAAUxB,GAEhCyB,EAAUvG,KAAK,CAAC0G,EAAMzE,GAAOwE,EAAkB,IAAMA,EAAkB,KA9BzB,CA+BhD,IACOF,CACT,CACA,IAAIL,EAAY,W,kGCrEhB,GAAIU,EAAAA,GAAe,CACjBC,EAAAA,GAAYC,aAAe,GAE3B,IAAMC,EAAYF,EAAAA,GAAYG,MAC9BH,EAAAA,GAAYG,MAAQ,WAClB,IACyCC,EADzCC,GAAAC,EAAAA,EAAAA,GACiBN,EAAAA,GAAYC,cAAY,IAAzC,IAAAI,EAAAE,MAAAH,EAAAC,EAAAhC,KAAAmC,MAA2C,EACzCC,EADWL,EAAA/E,QAEb,CAAC,OAAAqF,GAAAL,EAAAM,EAAAD,EAAA,SAAAL,EAAAO,GAAA,CACDV,GACF,CACF,CAOO,SAASzF,EAAeoG,GACzBC,EAAAA,KACFC,EAAAA,EAAAA,GAA4BF,GAAI,IAChCG,EAAAA,EAAAA,IAAuB,WAAYH,IAE1Bd,EAAAA,IACTC,EAAAA,GAAYC,aAAa9G,KAAK0H,EAGlC,C,2RClBO,SAASI,IACd,IAAAC,EAGItF,UAAU3D,OAAS,QAAsBC,IAAjB0D,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAFvEuF,EAAID,EAAJC,KACAC,EAAKF,EAALE,MAEF,GAAKD,GAASC,EACd,IACE,IAAMC,EA6BV,SAAuBC,GACrB,IAAKA,EAAU,OACVC,MAAMC,QAAQF,KAAWA,EAAW,CAACA,IAC1C,IAE4BlB,EAFtBqB,EAAU,GACVC,EAAU,GAAGrB,GAAAC,EAAAA,EAAAA,GACCgB,GAAQ,IAA5B,IAAAjB,EAAAE,MAAAH,EAAAC,EAAAhC,KAAAmC,MAA8B,KACtBmB,EAAYC,EADJxB,EAAA/E,OAETsG,IACLF,EAAQtI,KAAKwI,EAAUE,eACvBH,EAAQvI,KAAKwI,EAAUG,eACzB,CAAC,OAAApB,GAAAL,EAAAM,EAAAD,EAAA,SAAAL,EAAAO,GAAA,CACD,IAAKc,EAAQzJ,OAAQ,OACrB,MAAO,CACL4J,cAAeJ,EAAQM,KAAK,KAE5BD,cAAeJ,EAAQK,KAAK,KAE5BC,mBAAoB,UAExB,CAhDoBC,CAAcC,EAAiBf,IAC/C,GAAIE,EAAS,OAAOA,EACpB,IAAMc,EAAWP,EAwDrB,SAA6BQ,GAC3B,IAAKA,GAA4C,kBAAnBA,EAA6B,OAC3D,IAAMpK,EAAS,IAAIqK,gBAAgBD,GACnC,OAAOF,EAAiBtF,OAAO0F,YAAYtK,GAC7C,CA5DoCuK,CAAoBnB,IACpD,GAAIe,EAAU,OAAOA,CACvB,CAAE,MAAOzB,GACP,CAEJ,CAMA,SAASkB,EAAeN,GACtB,GAAwB,kBAAbA,GAA0BA,EAASF,OAAmC,kBAAnBE,EAASF,MAAvE,CAGA,IAAMoB,EAAUlB,EAASF,MAAMqB,OAAOC,MAAM,0CACtCZ,EAAuB,OAAPU,QAAO,IAAPA,OAAO,EAAPA,EAAU,GAChC,GAAKV,EAEL,MAAO,CACLD,cAFoBP,EAASO,gBAAwB,OAAPW,QAAO,IAAPA,OAAO,EAAPA,EAAU,KAAM,YAI9DV,cAAAA,EAEAE,mBAAoB,UAZ2E,CAcnG,CAqBA,SAASE,EAAiBS,GACxB,IAAIrB,EACJ,GAAKqB,IAAsC,kBAAhBA,GAAmD,kBAAhBA,KAA2ErB,EAAV,kBAAhBqB,EAAqCC,KAAKC,MAAMF,GAA6BA,GCpElL,QADiBG,EDsETxB,SCrER,IAAHwB,OAAG,EAAHA,EAAKC,eAAgB,CAAC,EAAEA,aDqECxB,MAAMC,QAAQF,IAA9C,CCtEK,IAAsBwB,EDyE3B,GADIvB,MAAMC,QAAQF,GAAqBA,EAAS0B,MAAK,SAAAC,GAAC,OAAIC,EAAkBD,EAAE,IAAiBC,EAAkB5B,GAEjH,OAAOA,CAJwD,CAKjE,CAMA,SAAS4B,EAAkBJ,GACzB,QAAwB,kBAARA,IAAqBA,EAAI1B,OAA8B,kBAAd0B,EAAI1B,MAC/D,CExEO,IAAM+B,EAAS,SAAAC,IAAA3J,EAAAA,EAAAA,GAAA0J,EAAAC,GAAA,IAAA1J,GAAAC,EAAAA,EAAAA,GAAAwJ,GAEpB,SAAAA,EAAYzE,EAAiB2E,GAAY,IAAArJ,GAAAC,EAAAA,EAAAA,GAAA,KAAAkJ,GACvCnJ,EAAAN,EAAAQ,KAAA,KAAMwE,EAAiB2E,EAAYC,EAAAA,GACnC,IAAMC,GAAYC,EAAAA,EAAAA,IAAiB9E,GAC7B+E,GAA8C,IAA3BF,EAAUG,KAAKC,QAExC,IADAC,EAAAA,EAAAA,GAAS,MAAOC,EAAU7J,EAAK8J,YAAa9J,EAAKa,KAC5C4I,EAEH,OADAzJ,EAAK+J,SACLC,EAAAA,EAAAA,GAAAhK,GAGF,IAAMlC,GAAWmM,EAAAA,EAAAA,IAAWvF,GAAiB5G,UAC7CW,EAAAA,EAAAA,GAAYX,GACZ,IAAIoM,EAAa,GACbC,EAAgB,CAAC,EACjBC,EAAiB,GACfvJ,EAAKb,EAAKa,GACVwJ,EAAqBd,EAAUG,KAAKW,oBAAsB,GAC1DC,EAAmBf,EAAUG,KAAKa,gBAAkB,IAG1DvK,EAAK6J,SAAWA,EAChB7J,EAAKwK,eAAiBA,EACtBxK,EAAKyK,gBAAkB,WACrB,MAAO,CACLP,WAAAA,EACAC,cAAAA,EAEJ,EACAtJ,EAAGC,GAAG,oBAAoB,SAAA4J,GACnBP,EAAcO,EAAYC,YAExBR,EAAcO,EAAYC,GACnC,IACA9J,EAAGC,GAAG,wBAAwB,SAAA4J,GACvBP,EAAcO,EAAYC,MAC/BR,EAAcO,EAAYC,IAAIrH,SAAQ,SAAUsH,GAE9CV,EAAW/K,KAAKyL,EAClB,WACOT,EAAcO,EAAYC,IACnC,IACA,IAAME,EAAY,IAAItL,EAAAA,EAAiB,SAAU,CAC/CkE,WAgHF,SAAiCpB,GAC/B,GAAIA,EAAOC,OAAS8H,EAAenM,OAAS,EAAG,KAAA6M,GAC7CA,EAAAZ,GAAWa,QAAOhI,MAAA+H,GAAA9H,EAAAA,EAAAA,GAAIoH,IACtBA,EAAiB,EACnB,CACF,EApHE3H,WAAY+H,IACb5J,EAAAA,EAAAA,GAAAZ,IACDa,EAAGC,GAAG,SAASkK,OAAOhL,EAAK8J,cAAc,WACvCe,EAAUI,WAAWZ,EACvB,IACArK,EAAK+J,QACL,IAAMmB,GAASC,EAAAA,EAAAA,IAAQzG,GAAiB0G,YAClCC,EAAc9B,EAAU+B,MAAMJ,OACpC,SAASrB,EAAS7L,EAAQuN,EAASC,EAAWC,EAAS5F,GAAM,IAAA6F,EAIvDC,EASJ,GAZAJ,EAAQK,KAAOJ,EAKbG,EADE3N,EAAO6N,KACF/F,EAAAA,EAAAA,GAAU,CAAC9H,EAAO8N,OAAQ9N,EAAO6N,OAEjC/F,EAAAA,EAAAA,GAAU,CAAC9H,EAAO8N,OAAQ9N,EAAOe,KAAMf,EAAOQ,WAIvD6K,EAAW0C,MAAM,MAAOJ,EAAM3N,EAAQuN,GACjC9B,EACL,IAAK1L,EAAAA,EAAAA,GAAmBC,GAAxB,EASAgO,EAAAA,EAAAA,GAAO,YAAa,CAAC,MAAOL,EAAM3N,EAAQuN,QAAUrN,EAAW+N,EAAAA,EAAcC,aAAcrL,GAC3F,IAAIsL,EAAa7K,KACb8K,EAAQ,CACVC,OAAQrO,EAAOqO,OACfP,OAAQ9N,EAAO8N,OACfzM,OAAQrB,EAAOe,KACfO,KAAMtB,EAAOQ,SACb8N,YAAaf,EAAQgB,OACrBC,aAAcjB,EAAQkB,OACtB5G,KAAAA,EACA2F,UAAAA,EACAC,QAAAA,EACAiB,iBAAkBnB,EAAQoB,QAgB5B,GAdIR,EAAWS,KACbR,EAAMS,OAASV,EAAWS,GAAGC,OAC7BT,EAAMU,QAAUX,EAAWS,GAAGE,QAC9BV,EAAMW,cAAgBZ,EAAWS,GAAGI,WAItCZ,EAAMa,IAAMjP,EAAOiP,IAAMhG,EAAS,CAChCE,KAAM7F,KAAK6F,KACXC,MAAW,OAAJ9F,WAAI,IAAJA,MAAkB,QAAdoK,EAAJpK,KAAM4L,oBAAY,IAAAxB,OAAA,EAAlBA,EAAoByB,SAEzBf,EAAMa,MAAKjB,EAAAA,EAAAA,GAAOoB,EAAAA,GAA+B,CAAC,mCAAmCtH,EAAAA,EAAAA,GAAUsG,EAAMa,KAAKhP,aAASC,EAAW+N,EAAAA,EAAcV,QAAS1K,GAGrJS,KAAK+L,QAAS,CAChB,IAAIC,EAAgBhM,KAAK+L,QAAQ3C,YAAYC,GAC7CR,EAAcmD,GAAiBnD,EAAcmD,IAAkB,GAC/DnD,EAAcmD,GAAenO,KAAKiN,EACpC,MACElC,EAAW/K,KAAKiN,EAlClB,MAPMpO,EAAOG,WAAa+M,GAAUG,GAAerN,EAAOG,WAAakN,GAEnEW,EAAAA,EAAAA,GAAOoB,EAAAA,GAA+B,CAAC,mCAA+BlP,EAAW+N,EAAAA,EAAcV,QAAS1K,IAExGmL,EAAAA,EAAAA,GAAOoB,EAAAA,GAA+B,CAAC,iCAA6BlP,EAAW+N,EAAAA,EAAcV,QAAS1K,EAuC5G,CACA,SAAS2J,EAAe+C,GAEtB,GADAA,EAAUA,GAAW,CAAC,EACI,IAAtBrD,EAAWjM,OACb,OAAO,KAIT,IAFA,IAAIkE,EAAUM,EAAWyH,EAAYqD,EAAQhD,gBAAkBD,GAC3DkD,EAAc,GACTpP,EAAI,EAAGA,EAAI+D,EAAQlE,OAAQG,IAClCoP,EAAYrO,KAAK,CACfgI,KAAM,CACJR,EAAGxE,EAAQ/D,MAQjB,OAJImP,EAAQjL,QACV8H,EAAiBF,EAAWuD,SAE9BvD,EAAa,GACNsD,CACT,CACA,SAAS/K,EAAWiL,EAAQnD,EAAgBoD,GAC1CA,EAASA,GAAU,EAKnB,IAJA,IAAIxL,EAAU,GAEVyL,EA0BN,SAAqBC,EAAKC,GACxBA,EAAYA,GAAaD,EAAI5P,OAE7B,IADA,IAAI0P,EAAS,GACJvP,EAAI,EAAG2P,EAAMF,EAAI5P,OAAQG,EAAI2P,EAAK3P,GAAK0P,EAC9CH,EAAOxO,KAAK,IAAI6O,EAAMH,EAAIJ,MAAMrP,EAAGA,EAAI0P,KAEzC,OAAOH,CACT,CAjCoBM,CAAYP,EADdA,EAAOzP,OAAS0P,GAE5BO,GAAS,EACJ9P,EAAI,EAAGA,EAAIwP,EAAY3P,OAAQG,IAAK,CAC3C,IAAI+P,EAAeP,EAAYxP,GAC/B,GAAI+P,EAAaD,OAAO3D,IACtB,GAAmC,IAA/B4D,EAAaT,OAAOzP,OAAc,CAKpCiQ,GAAS,EACT,KACF,OAEA/L,EAAQhD,KAAKgP,EAAahM,QAE9B,CAEA,OAAO+L,EAASzL,EAAWiL,EAAQnD,IAAkBoD,GAAUxL,CACjE,CAeA,SAAS6L,EAAMN,GACbpM,KAAKmE,WAAYhB,EAAAA,EAAAA,IAAoBC,GACrCpD,KAAKoM,OAASA,EACdpM,KAAKa,QAAU,SACf,IAAK,IAAI/D,EAAI,EAAGA,EAAIsP,EAAOzP,OAAQG,IAAK,CACtC,IAAIgO,EAAQsB,EAAOtP,GACfgQ,EAAS,EAAChK,EAAAA,EAAAA,IAAQgI,EAAMZ,YAAYpH,EAAAA,EAAAA,IAAQgI,EAAMX,QAAUW,EAAMZ,YAAYpH,EAAAA,EAAAA,IAAQ,IAE1FA,EAAAA,EAAAA,IAAQ,GAER9C,KAAKmE,UAAU2G,EAAMC,SAASjI,EAAAA,EAAAA,IAAQgI,EAAMN,QAASxK,KAAKmE,UAAU2G,EAAM/M,QAASiC,KAAKmE,UAAU2G,EAAM9M,OAAO8E,EAAAA,EAAAA,IAAQgI,EAAME,cAAclI,EAAAA,EAAAA,IAAQgI,EAAMI,cAA8B,UAAfJ,EAAMvG,KAAmB,EAAI,GAAIvE,KAAKmE,UAAU,IAExNzB,EAAAA,EAAAA,IAASoI,EAAMS,OAAQvL,KAAKmE,WAAW,IAEvCzB,EAAAA,EAAAA,IAASoI,EAAMU,QAASxL,KAAKmE,WAAW,IAExCzB,EAAAA,EAAAA,IAASoI,EAAMW,cAAe3I,EAAAA,IAAS,IAGnCiK,EAAS,KAIT3I,GAAYH,EAAAA,EAAAA,KAAmB+I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,GAC/BnD,EAAAA,EAAAA,IAAQzG,GAAiB6J,cAAgB,CAAC,GAC1CnC,EAAMa,KAAO,CAAC,GACjB3L,KAAKmE,WACR2I,EAAOrD,SAAQ3G,EAAAA,EAAAA,IAAQsB,EAAUzH,SACjCoQ,GAAUD,EAAOrG,KAAK,KAClBrC,GAAaA,EAAUzH,OAAS,IAClCoQ,GAAU,IAAM3I,EAAUqC,KAAK,MAE7B3J,EAAI,EAAIsP,EAAOzP,SAAQoQ,GAAU,KACrC/M,KAAKa,SAAWkM,CAClB,CACA/M,KAAK4M,OAAS,SAAU3D,GAEtB,OADAA,EAAiBA,GAAkBD,EACN,EAAtBhJ,KAAKa,QAAQlE,OAAasM,CACnC,CACF,CAAC,OAAAvK,CACH,CAAC,OAAAmB,EAAAA,EAAAA,GAAAgI,EAAA,CAlNmB,CAASqF,EAAAA,IAmN9BC,EAAAA,EAAAA,GAnNYtF,EAAS,cACCG,EAAAA,E,oEChBR,SAAShD,EAA2BoI,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAClE,IAAKE,EAAI,CACP,GAAIrH,MAAMC,QAAQkH,KAAOE,GAAK,OAA2BF,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEzQ,OAAqB,CAC/G2Q,IAAIF,EAAIE,GACZ,IAAIxQ,EAAI,EACJ2Q,EAAI,WAAc,EACtB,MAAO,CACLxI,EAAGwI,EACH1K,EAAG,WACD,OAAIjG,GAAKsQ,EAAEzQ,OAAe,CACxBuI,MAAM,GAED,CACLA,MAAM,EACNnF,MAAOqN,EAAEtQ,KAEb,EACAuI,EAAG,SAAWqI,GACZ,MAAMA,CACR,EACApI,EAAGmI,EAEP,CACA,MAAM,IAAIE,UAAU,wIACtB,CACA,IAEEvI,EAFEwI,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACL5I,EAAG,WACDqI,EAAKA,EAAG1O,KAAKwO,EACf,EACArK,EAAG,WACD,IAAI+K,EAAOR,EAAGS,OAEd,OADAH,EAAmBE,EAAK5I,KACjB4I,CACT,EACAzI,EAAG,SAAW2I,GACZH,GAAS,EACTzI,EAAM4I,CACR,EACA1I,EAAG,WACD,IACOsI,GAAoC,MAAhBN,EAAW,QAAWA,EAAW,QAC5D,CAAE,QACA,GAAIO,EAAQ,MAAMzI,CACpB,CACF,EAEJ,C","sources":["../node_modules/@newrelic/browser-agent/dist/esm/common/deny-list/deny-list.js","../node_modules/@newrelic/browser-agent/dist/esm/common/harvest/harvest-scheduler.js","../node_modules/@newrelic/browser-agent/dist/esm/common/serialize/bel-serializer.js","../node_modules/@newrelic/browser-agent/dist/esm/common/unload/eol.js","../node_modules/@newrelic/browser-agent/dist/esm/features/ajax/aggregate/gql.js","../node_modules/@newrelic/browser-agent/dist/esm/common/util/type-check.js","../node_modules/@newrelic/browser-agent/dist/esm/features/ajax/aggregate/index.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["/** An array of filter objects {hostname, pathname} for identifying XHR events to be excluded from collection.\n * @see {@link https://docs.newrelic.com/docs/browser/new-relic-browser/configuration/filter-ajax-request-events/ Filter AjaxRequest events}\n * @type {Array.<{hostname: string, pathname: string}>}\n */\nvar denyList = [];\n\n/**\n * Evaluates whether an XHR event should be included for collection based on the {@link denyList|AjaxRequest deny list}.\n * @param {Object} params - object with properties of the XHR event\n * @returns {boolean} `true` if request does not match any entries of {@link denyList|deny list}; else `false`\n */\nexport function shouldCollectEvent(params) {\n  if (denyList.length === 0) {\n    return true;\n  }\n\n  // XHR requests with an undefined hostname (e.g., data URLs) should not be collected.\n  if (params.hostname === undefined) {\n    return false;\n  }\n  for (var i = 0; i < denyList.length; i++) {\n    var parsed = denyList[i];\n    if (parsed.hostname === '*') {\n      return false;\n    }\n    if (domainMatchesPattern(parsed.hostname, params.hostname) && comparePath(parsed.pathname, params.pathname)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Initializes the {@link denyList|XHR deny list} by extracting hostname and pathname from an array of filter strings.\n * @param {string[]} denyListConfig - array of URL filters to identify XHR requests to be excluded from collection\n */\nexport function setDenyList(denyListConfig) {\n  denyList = [];\n  if (!denyListConfig || !denyListConfig.length) {\n    return;\n  }\n  for (var i = 0; i < denyListConfig.length; i++) {\n    let url = denyListConfig[i];\n    if (!url) continue; // ignore bad values like undefined or empty strings\n\n    if (url.indexOf('http://') === 0) {\n      url = url.substring(7);\n    } else if (url.indexOf('https://') === 0) {\n      url = url.substring(8);\n    }\n    const firstSlash = url.indexOf('/');\n    let host, pathname;\n    if (firstSlash > 0) {\n      host = url.substring(0, firstSlash);\n      pathname = url.substring(firstSlash);\n    } else {\n      host = url;\n      pathname = '';\n    }\n    let [hostname] = host.split(':');\n    denyList.push({\n      hostname,\n      pathname\n    });\n  }\n}\n/**\n * Returns true if the right side of `domain` (end of string) matches `pattern`.\n * @param {string} pattern - a string to be matched against the end of `domain` string\n * @param {string} domain - a domain string with no protocol or path (e.g., app1.example.com)\n * @returns {boolean} `true` if domain matches pattern; else `false`\n */\nfunction domainMatchesPattern(pattern, domain) {\n  if (pattern.length > domain.length) {\n    return false;\n  }\n  return domain.indexOf(pattern) === domain.length - pattern.length;\n}\n\n/**\n * Returns true if a URL path matches a pattern string, disregarding leading slashes.\n * @param {string} pattern - a string to compare with path (e.g., api/v1)\n * @param {string} path - a string representing a URL path (e.g., /api/v1)\n * @returns {boolean} `true` if path and pattern are an exact string match (except for leading slashes); else `false`\n */\nfunction comparePath(pattern, path) {\n  if (pattern.indexOf('/') === 0) {\n    pattern = pattern.substring(1);\n  }\n  if (path.indexOf('/') === 0) {\n    path = path.substring(1);\n  }\n\n  // No path in pattern means match all paths.\n  if (pattern === '') {\n    return true;\n  }\n  return pattern === path;\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as submitData from '../util/submit-data';\nimport { SharedContext } from '../context/shared-context';\nimport { Harvest } from './harvest';\nimport { subscribeToEOL } from '../unload/eol';\nimport { SESSION_EVENTS } from '../session/session-entity';\n\n/**\n * Periodically invokes harvest calls and handles retries\n */\nexport class HarvestScheduler extends SharedContext {\n  /**\n     * Create a HarvestScheduler\n     * @param {string} endpoint - The base BAM endpoint name -- ex. 'events'\n     * @param {object} opts - The options used to configure the HarvestScheduler\n     * @param {Function} opts.onFinished - The callback to be fired when a harvest has finished\n     * @param {Function} opts.getPayload - A callback which can be triggered to return a payload for harvesting\n     * @param {number} opts.retryDelay - The number of seconds to wait before retrying after a network failure\n     * @param {boolean} opts.raw - Use a prefabricated payload shape as the harvest payload without the need for formatting\n     * @param {string} opts.customUrl - A custom url that falls outside of the shape of the standard BAM harvester url pattern.  Will use directly instead of concatenating various pieces\n     * @param {*} parent - The parent object, whose state can be passed into SharedContext\n     */\n  constructor(endpoint, opts, parent) {\n    super(parent); // gets any allowed properties from the parent and stores them in `sharedContext`\n    this.endpoint = endpoint;\n    this.opts = opts || {};\n    this.started = false;\n    this.timeoutHandle = null;\n    this.aborted = false; // this controls the per-interval and final harvests for the scheduler (currently per feature specific!)\n\n    this.harvest = new Harvest(this.sharedContext);\n\n    // unload if EOL mechanism fires\n    subscribeToEOL(this.unload.bind(this));\n\n    /* Flush all buffered data if session resets and give up retries. This should be synchronous to ensure that the correct `session` value is sent.\n      Since session-reset generates a new session ID and the ID is grabbed at send-time, any delays or retries would cause the payload to be sent under\n      the wrong session ID. */\n    this.sharedContext?.ee.on(SESSION_EVENTS.RESET, () => this.runHarvest({\n      forceNoRetry: true\n    }));\n  }\n\n  /**\n   * This function is only meant for the last outgoing harvest cycle of a page. It trickles down to using sendBeacon, which should not be used\n   * to send payloads while the page is still active, due to limitations on how much data can be buffered in the API at any one time.\n   */\n  unload() {\n    if (this.aborted) return;\n    // If opts.onUnload is defined, these are special actions to execute before attempting to send the final payload.\n    if (this.opts.onUnload) this.opts.onUnload();\n    this.runHarvest({\n      unload: true\n    });\n  }\n  startTimer(interval, initialDelay) {\n    this.interval = interval;\n    this.started = true;\n    this.scheduleHarvest(initialDelay != null ? initialDelay : this.interval);\n  }\n  stopTimer() {\n    let permanently = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.aborted = permanently; // stopping permanently is same as aborting, but this function also cleans up the setTimeout loop\n    this.started = false;\n    if (this.timeoutHandle) {\n      clearTimeout(this.timeoutHandle);\n    }\n  }\n  scheduleHarvest(delay, opts) {\n    if (this.timeoutHandle) return;\n    if (delay == null) {\n      delay = this.interval;\n    }\n    this.timeoutHandle = setTimeout(() => {\n      this.timeoutHandle = null;\n      this.runHarvest(opts);\n    }, delay * 1000);\n  }\n  runHarvest(opts) {\n    if (this.aborted) return;\n\n    /**\n     * This is executed immediately after harvest sends the data via XHR, or if there's nothing to send. Note that this excludes on unloading / sendBeacon.\n     * @param {Object} result\n     */\n    const cbRanAfterSend = result => {\n      if (opts?.forceNoRetry) result.retry = false; // discard unsent data rather than re-queuing for next harvest attempt\n      this.onHarvestFinished(opts, result);\n    };\n    let harvests = [];\n    let submitMethod;\n    let payload;\n    if (this.opts.getPayload) {\n      // Ajax & PVT & SR features provide a callback function to get data for harvesting\n      submitMethod = submitData.getSubmitMethod({\n        isFinalHarvest: opts?.unload\n      });\n      if (!submitMethod) return false;\n      const retry = !opts?.unload && submitMethod === submitData.xhr;\n      payload = this.opts.getPayload({\n        retry\n      });\n      if (!payload) {\n        if (this.started) {\n          this.scheduleHarvest();\n        }\n        return;\n      }\n      payload = Object.prototype.toString.call(payload) === '[object Array]' ? payload : [payload];\n      harvests.push(...payload);\n    }\n\n    /** sendX is used for features that do not supply a preformatted payload via \"getPayload\" */\n    let send = args => this.harvest.sendX(args);\n    if (harvests.length) {\n      /** _send is the underlying method for sending in the harvest, if sending raw we can bypass the other helpers completely which format the payloads */\n      if (this.opts.raw) send = args => this.harvest._send(args);\n      /** send is used to formated the payloads from \"getPayload\" and obfuscate before sending */else send = args => this.harvest.send(args);\n    } else {\n      // force it to run at least once in sendX mode\n      harvests.push(undefined);\n    }\n    harvests.forEach(payload => {\n      send({\n        endpoint: this.endpoint,\n        payload,\n        opts,\n        submitMethod,\n        cbFinished: cbRanAfterSend,\n        customUrl: this.opts.customUrl,\n        raw: this.opts.raw\n      });\n    });\n    if (this.started) {\n      this.scheduleHarvest();\n    }\n  }\n  onHarvestFinished(opts, result) {\n    if (this.opts.onFinished) {\n      this.opts.onFinished(result);\n    }\n    if (result.sent && result.retry) {\n      const delay = result.delay || this.opts.retryDelay;\n      // reschedule next harvest if should be delayed longer\n      if (this.started && delay) {\n        clearTimeout(this.timeoutHandle);\n        this.timeoutHandle = null;\n        this.scheduleHarvest(delay, opts);\n      } else if (!this.started && delay) {\n        // if not running on a timer, schedule a single retry\n        this.scheduleHarvest(delay, opts);\n      }\n    }\n  }\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mapOwn } from '../util/map-own';\nimport { stringify } from '../util/stringify';\nimport { Obfuscator } from '../util/obfuscate';\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar MAX_ATTRIBUTES = 64;\nexport function nullable(val, fn, comma) {\n  return val || val === 0 || val === '' ? fn(val) + (comma ? ',' : '') : '!';\n}\nexport function numeric(n, noDefault) {\n  if (noDefault) {\n    return Math.floor(n).toString(36);\n  }\n  return n === undefined || n === 0 ? '' : Math.floor(n).toString(36);\n}\nexport function getAddStringContext(agentIdentifier) {\n  // eslint-disable-next-line\n  var stringTable = Object.hasOwnProperty('create') ? Object.create(null) : {};\n  var stringTableIdx = 0;\n  return addString;\n  function addString(str) {\n    if (typeof str === 'undefined' || str === '') return '';\n    var obfuscator = new Obfuscator({\n      agentIdentifier\n    });\n    str = String(str);\n    if (obfuscator.shouldObfuscate()) str = obfuscator.obfuscateString(str);\n    if (hasOwnProp.call(stringTable, str)) {\n      return numeric(stringTable[str], true);\n    } else {\n      stringTable[str] = stringTableIdx++;\n      return quoteString(str);\n    }\n  }\n}\nexport function addCustomAttributes(attrs, addString) {\n  var attrParts = [];\n  mapOwn(attrs, function (key, val) {\n    if (attrParts.length >= MAX_ATTRIBUTES) return;\n    var type = 5;\n    var serializedValue;\n    // add key to string table first\n    key = addString(key);\n    switch (typeof val) {\n      case 'object':\n        if (val) {\n          // serialize objects to strings\n          serializedValue = addString(stringify(val));\n        } else {\n          // null attribute type\n          type = 9;\n        }\n        break;\n      case 'number':\n        type = 6;\n        // make sure numbers contain a `.` so they are parsed as doubles\n        serializedValue = val % 1 ? val : val + '.';\n        break;\n      case 'boolean':\n        type = val ? 7 : 8;\n        break;\n      case 'undefined':\n        // we treat undefined as a null attribute (since dirac does not have a concept of undefined)\n        type = 9;\n        break;\n      default:\n        serializedValue = addString(val);\n    }\n    attrParts.push([type, key + (serializedValue ? ',' + serializedValue : '')]);\n  });\n  return attrParts;\n}\nvar escapable = /([,\\\\;])/g;\nfunction quoteString(str) {\n  return \"'\" + str.replace(escapable, '\\\\$1');\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { windowAddEventListener } from '../event-listener/event-listener-opts';\nimport { globalScope, isWorkerScope, isBrowserScope } from '../constants/runtime';\nimport { subscribeToVisibilityChange } from '../window/page-visibility';\nif (isWorkerScope) {\n  globalScope.cleanupTasks = []; // create new list on WorkerGlobalScope to track funcs to run before exiting thread\n\n  const origClose = globalScope.close;\n  globalScope.close = () => {\n    // on worker's EoL signal, execute all \"listeners\", e.g. final harvests\n    for (let task of globalScope.cleanupTasks) {\n      task();\n    }\n    origClose();\n  };\n}\n\n/**\n * Subscribes a provided callback to the time/event when the agent should treat it as end-of-life.\n * This is used, for example, to submit a final harvest and send all remaining data on best-effort.\n * @param {function} cb - func to run before or during the last reliable event or time of an env's life span\n */\nexport function subscribeToEOL(cb) {\n  if (isBrowserScope) {\n    subscribeToVisibilityChange(cb, true); // when user switches tab or hides window, esp. mobile scenario\n    windowAddEventListener('pagehide', cb); // when user navigates away, and because safari iOS v14.4- doesn't fully support vis change\n    // --this ought to be removed once support for version below 14.5 phases out\n  } else if (isWorkerScope) {\n    globalScope.cleanupTasks.push(cb); // close() should run these tasks before quitting thread\n  }\n  // By default (for other env), this fn has no effect.\n}","import { isPureObject } from '../../../common/util/type-check';\n\n/**\n * @typedef {object} GQLMetadata\n * @property {string} operationName Name of the operation\n * @property {string} operationType Type of the operation\n * @property {string} operationFramework Framework responsible for the operation\n */\n\n/**\n * Parses and returns the graphql metadata from a network request. If the network\n * request is not a graphql call, undefined will be returned.\n * @param {object|string} body Ajax request body\n * @param {string} query Ajax request query param string\n * @returns {GQLMetadata | undefined}\n */\nexport function parseGQL() {\n  let {\n    body,\n    query\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (!body && !query) return;\n  try {\n    const gqlBody = parseBatchGQL(parseGQLContents(body));\n    if (gqlBody) return gqlBody;\n    const gqlQuery = parseSingleGQL(parseGQLQueryString(query));\n    if (gqlQuery) return gqlQuery;\n  } catch (err) {\n    // parsing failed, return undefined\n  }\n}\n\n/**\n * @param {string|Object} gql The GraphQL object body sent to a GQL server\n * @returns {GQLMetadata}\n */\nfunction parseSingleGQL(contents) {\n  if (typeof contents !== 'object' || !contents.query || typeof contents.query !== 'string') return;\n\n  /** parses gql query string and returns [fullmatch, type match, name match] */\n  const matches = contents.query.trim().match(/^(query|mutation|subscription)\\s?(\\w*)/);\n  const operationType = matches?.[1];\n  if (!operationType) return;\n  const operationName = contents.operationName || matches?.[2] || 'Anonymous';\n  return {\n    operationName,\n    // the operation name of the indiv query\n    operationType,\n    // query, mutation, or subscription,\n    operationFramework: 'GraphQL'\n  };\n}\nfunction parseBatchGQL(contents) {\n  if (!contents) return;\n  if (!Array.isArray(contents)) contents = [contents];\n  const opNames = [];\n  const opTypes = [];\n  for (let content of contents) {\n    const operation = parseSingleGQL(content);\n    if (!operation) continue;\n    opNames.push(operation.operationName);\n    opTypes.push(operation.operationType);\n  }\n  if (!opTypes.length) return;\n  return {\n    operationName: opNames.join(','),\n    // the operation name of the indiv query -- joined by ',' for batched results\n    operationType: opTypes.join(','),\n    // query, mutation, or subscription -- joined by ',' for batched results\n    operationFramework: 'GraphQL'\n  };\n}\nfunction parseGQLContents(gqlContents) {\n  let contents;\n  if (!gqlContents || typeof gqlContents !== 'string' && typeof gqlContents !== 'object') return;else if (typeof gqlContents === 'string') contents = JSON.parse(gqlContents);else contents = gqlContents;\n  if (!isPureObject(contents) && !Array.isArray(contents)) return;\n  let isValid = false;\n  if (Array.isArray(contents)) isValid = contents.some(x => validateGQLObject(x));else isValid = validateGQLObject(contents);\n  if (!isValid) return;\n  return contents;\n}\nfunction parseGQLQueryString(gqlQueryString) {\n  if (!gqlQueryString || typeof gqlQueryString !== 'string') return;\n  const params = new URLSearchParams(gqlQueryString);\n  return parseGQLContents(Object.fromEntries(params));\n}\nfunction validateGQLObject(obj) {\n  return !(typeof obj !== 'object' || !obj.query || typeof obj.query !== 'string');\n}","/**\n * Tests a passed object to see if it is a pure object or not. All non-primatives in JS\n * are technically objects and would pass a `typeof` check.\n * @param {*} obj Input object to be tested\n**/\nexport function isPureObject(obj) {\n  return obj?.constructor === {}.constructor;\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { registerHandler as register } from '../../../common/event-emitter/register-handler';\nimport { stringify } from '../../../common/util/stringify';\nimport { nullable, numeric, getAddStringContext, addCustomAttributes } from '../../../common/serialize/bel-serializer';\nimport { handle } from '../../../common/event-emitter/handle';\nimport { getConfiguration, getInfo, getRuntime } from '../../../common/config/config';\nimport { HarvestScheduler } from '../../../common/harvest/harvest-scheduler';\nimport { setDenyList, shouldCollectEvent } from '../../../common/deny-list/deny-list';\nimport { FEATURE_NAME } from '../constants';\nimport { FEATURE_NAMES } from '../../../loaders/features/features';\nimport { SUPPORTABILITY_METRIC_CHANNEL } from '../../metrics/constants';\nimport { AggregateBase } from '../../utils/aggregate-base';\nimport { parseGQL } from './gql';\nexport class Aggregate extends AggregateBase {\n  static featureName = FEATURE_NAME;\n  constructor(agentIdentifier, aggregator) {\n    super(agentIdentifier, aggregator, FEATURE_NAME);\n    const agentInit = getConfiguration(agentIdentifier);\n    const allAjaxIsEnabled = agentInit.ajax.enabled !== false;\n    register('xhr', storeXhr, this.featureName, this.ee);\n    if (!allAjaxIsEnabled) {\n      this.drain();\n      return; // feature will only collect timeslice metrics & ajax trace nodes if it's not fully enabled\n    }\n\n    const denyList = getRuntime(agentIdentifier).denyList;\n    setDenyList(denyList);\n    let ajaxEvents = [];\n    let spaAjaxEvents = {};\n    let sentAjaxEvents = [];\n    const ee = this.ee;\n    const harvestTimeSeconds = agentInit.ajax.harvestTimeSeconds || 10;\n    const MAX_PAYLOAD_SIZE = agentInit.ajax.maxPayloadSize || 1000000;\n\n    // Exposes these methods to browser test files -- future TO DO: can be removed once these fns are extracted from the constructor into class func\n    this.storeXhr = storeXhr;\n    this.prepareHarvest = prepareHarvest;\n    this.getStoredEvents = function () {\n      return {\n        ajaxEvents,\n        spaAjaxEvents\n      };\n    };\n    ee.on('interactionSaved', interaction => {\n      if (!spaAjaxEvents[interaction.id]) return;\n      // remove from the spaAjaxEvents buffer, and let spa harvest it\n      delete spaAjaxEvents[interaction.id];\n    });\n    ee.on('interactionDiscarded', interaction => {\n      if (!spaAjaxEvents[interaction.id]) return;\n      spaAjaxEvents[interaction.id].forEach(function (item) {\n        // move it from the spaAjaxEvents buffer to the ajaxEvents buffer for harvesting here\n        ajaxEvents.push(item);\n      });\n      delete spaAjaxEvents[interaction.id];\n    });\n    const scheduler = new HarvestScheduler('events', {\n      onFinished: onEventsHarvestFinished,\n      getPayload: prepareHarvest\n    }, this);\n    ee.on(\"drain-\".concat(this.featureName), () => {\n      scheduler.startTimer(harvestTimeSeconds);\n    });\n    this.drain();\n    const beacon = getInfo(agentIdentifier).errorBeacon;\n    const proxyBeacon = agentInit.proxy.beacon;\n    function storeXhr(params, metrics, startTime, endTime, type) {\n      metrics.time = startTime;\n\n      // send to session traces\n      var hash;\n      if (params.cat) {\n        hash = stringify([params.status, params.cat]);\n      } else {\n        hash = stringify([params.status, params.host, params.pathname]);\n      }\n\n      // store as metric\n      aggregator.store('xhr', hash, params, metrics);\n      if (!allAjaxIsEnabled) return;\n      if (!shouldCollectEvent(params)) {\n        if (params.hostname === beacon || proxyBeacon && params.hostname === proxyBeacon) {\n          // This doesn't make a distinction if the same-domain request is going to a different port or path...\n          handle(SUPPORTABILITY_METRIC_CHANNEL, ['Ajax/Events/Excluded/Agent'], undefined, FEATURE_NAMES.metrics, ee);\n        } else {\n          handle(SUPPORTABILITY_METRIC_CHANNEL, ['Ajax/Events/Excluded/App'], undefined, FEATURE_NAMES.metrics, ee);\n        }\n        return;\n      }\n      handle('bstXhrAgg', ['xhr', hash, params, metrics], undefined, FEATURE_NAMES.sessionTrace, ee);\n      var xhrContext = this;\n      var event = {\n        method: params.method,\n        status: params.status,\n        domain: params.host,\n        path: params.pathname,\n        requestSize: metrics.txSize,\n        responseSize: metrics.rxSize,\n        type,\n        startTime,\n        endTime,\n        callbackDuration: metrics.cbTime\n      };\n      if (xhrContext.dt) {\n        event.spanId = xhrContext.dt.spanId;\n        event.traceId = xhrContext.dt.traceId;\n        event.spanTimestamp = xhrContext.dt.timestamp;\n      }\n\n      // parsed from the AJAX body, looking for operationName param & parsing query for operationType\n      event.gql = params.gql = parseGQL({\n        body: this.body,\n        query: this?.parsedOrigin?.search\n      });\n      if (event.gql) handle(SUPPORTABILITY_METRIC_CHANNEL, ['Ajax/Events/GraphQL/Bytes-Added', stringify(event.gql).length], undefined, FEATURE_NAMES.metrics, ee);\n\n      // if the ajax happened inside an interaction, hold it until the interaction finishes\n      if (this.spaNode) {\n        var interactionId = this.spaNode.interaction.id;\n        spaAjaxEvents[interactionId] = spaAjaxEvents[interactionId] || [];\n        spaAjaxEvents[interactionId].push(event);\n      } else {\n        ajaxEvents.push(event);\n      }\n    }\n    function prepareHarvest(options) {\n      options = options || {};\n      if (ajaxEvents.length === 0) {\n        return null;\n      }\n      var payload = getPayload(ajaxEvents, options.maxPayloadSize || MAX_PAYLOAD_SIZE);\n      var payloadObjs = [];\n      for (var i = 0; i < payload.length; i++) {\n        payloadObjs.push({\n          body: {\n            e: payload[i]\n          }\n        });\n      }\n      if (options.retry) {\n        sentAjaxEvents = ajaxEvents.slice();\n      }\n      ajaxEvents = [];\n      return payloadObjs;\n    }\n    function getPayload(events, maxPayloadSize, chunks) {\n      chunks = chunks || 1;\n      var payload = [];\n      var chunkSize = events.length / chunks;\n      var eventChunks = splitChunks(events, chunkSize);\n      var tooBig = false;\n      for (var i = 0; i < eventChunks.length; i++) {\n        var currentChunk = eventChunks[i];\n        if (currentChunk.tooBig(maxPayloadSize)) {\n          if (currentChunk.events.length !== 1) {\n            /* if it is too big BUT it isnt length 1, we can split it down again,\n             else we just want to NOT push it into payload\n             because if it's length 1 and still too big for the maxPayloadSize\n             it cant get any smaller and we dont want to recurse forever */\n            tooBig = true;\n            break;\n          }\n        } else {\n          payload.push(currentChunk.payload);\n        }\n      }\n      // check if the current payload string is too big, if so then run getPayload again with more buckets\n      return tooBig ? getPayload(events, maxPayloadSize, ++chunks) : payload;\n    }\n    function onEventsHarvestFinished(result) {\n      if (result.retry && sentAjaxEvents.length > 0) {\n        ajaxEvents.unshift(...sentAjaxEvents);\n        sentAjaxEvents = [];\n      }\n    }\n    function splitChunks(arr, chunkSize) {\n      chunkSize = chunkSize || arr.length;\n      var chunks = [];\n      for (var i = 0, len = arr.length; i < len; i += chunkSize) {\n        chunks.push(new Chunk(arr.slice(i, i + chunkSize)));\n      }\n      return chunks;\n    }\n    function Chunk(events) {\n      this.addString = getAddStringContext(agentIdentifier); // pass agentIdentifier here\n      this.events = events;\n      this.payload = 'bel.7;';\n      for (var i = 0; i < events.length; i++) {\n        var event = events[i];\n        var fields = [numeric(event.startTime), numeric(event.endTime - event.startTime), numeric(0),\n        // callbackEnd\n        numeric(0),\n        // no callbackDuration for non-SPA events\n        this.addString(event.method), numeric(event.status), this.addString(event.domain), this.addString(event.path), numeric(event.requestSize), numeric(event.responseSize), event.type === 'fetch' ? 1 : '', this.addString(0),\n        // nodeId\n        nullable(event.spanId, this.addString, true) +\n        // guid\n        nullable(event.traceId, this.addString, true) +\n        // traceId\n        nullable(event.spanTimestamp, numeric, false) // timestamp\n        ];\n\n        var insert = '2,';\n\n        // add custom attributes\n        // gql decorators are added as custom attributes to alleviate need for new BEL schema\n        var attrParts = addCustomAttributes({\n          ...(getInfo(agentIdentifier).jsAttributes || {}),\n          ...(event.gql || {})\n        }, this.addString);\n        fields.unshift(numeric(attrParts.length));\n        insert += fields.join(',');\n        if (attrParts && attrParts.length > 0) {\n          insert += ';' + attrParts.join(';');\n        }\n        if (i + 1 < events.length) insert += ';';\n        this.payload += insert;\n      }\n      this.tooBig = function (maxPayloadSize) {\n        maxPayloadSize = maxPayloadSize || MAX_PAYLOAD_SIZE;\n        return this.payload.length * 2 > maxPayloadSize;\n      };\n    }\n  }\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["denyList","shouldCollectEvent","params","length","undefined","hostname","i","parsed","domainMatchesPattern","comparePath","pathname","setDenyList","denyListConfig","url","indexOf","substring","firstSlash","host","_host$split","split","_slicedToArray","push","pattern","domain","path","HarvestScheduler","_SharedContext","_inherits","_super","_createSuper","endpoint","opts","parent","_this$sharedContext","_this","_classCallCheck","call","started","timeoutHandle","aborted","harvest","Harvest","sharedContext","subscribeToEOL","unload","bind","_assertThisInitialized","ee","on","SESSION_EVENTS","RESET","runHarvest","forceNoRetry","_createClass","key","value","this","onUnload","interval","initialDelay","scheduleHarvest","permanently","arguments","clearTimeout","delay","_this2","setTimeout","_this3","submitMethod","payload","cbRanAfterSend","result","retry","onHarvestFinished","harvests","getPayload","submitData","isFinalHarvest","Object","prototype","toString","apply","_toConsumableArray","send","args","sendX","raw","_send","forEach","cbFinished","customUrl","onFinished","sent","retryDelay","SharedContext","hasOwnProp","hasOwnProperty","MAX_ATTRIBUTES","nullable","val","fn","comma","numeric","n","noDefault","Math","floor","getAddStringContext","agentIdentifier","stringTable","create","stringTableIdx","str","obfuscator","Obfuscator","String","shouldObfuscate","obfuscateString","replace","escapable","quoteString","addCustomAttributes","attrs","addString","attrParts","mapOwn","serializedValue","type","stringify","isWorkerScope","globalScope","cleanupTasks","origClose","close","_step","_iterator","_createForOfIteratorHelper","s","done","task","err","e","f","cb","isBrowserScope","subscribeToVisibilityChange","windowAddEventListener","parseGQL","_ref","body","query","gqlBody","contents","Array","isArray","opNames","opTypes","operation","parseSingleGQL","operationName","operationType","join","operationFramework","parseBatchGQL","parseGQLContents","gqlQuery","gqlQueryString","URLSearchParams","fromEntries","parseGQLQueryString","matches","trim","match","gqlContents","JSON","parse","obj","constructor","some","x","validateGQLObject","Aggregate","_AggregateBase","aggregator","FEATURE_NAME","agentInit","getConfiguration","allAjaxIsEnabled","ajax","enabled","register","storeXhr","featureName","drain","_possibleConstructorReturn","getRuntime","ajaxEvents","spaAjaxEvents","sentAjaxEvents","harvestTimeSeconds","MAX_PAYLOAD_SIZE","maxPayloadSize","prepareHarvest","getStoredEvents","interaction","id","item","scheduler","_ajaxEvents","unshift","concat","startTimer","beacon","getInfo","errorBeacon","proxyBeacon","proxy","metrics","startTime","endTime","_this$parsedOrigin","hash","time","cat","status","store","handle","FEATURE_NAMES","sessionTrace","xhrContext","event","method","requestSize","txSize","responseSize","rxSize","callbackDuration","cbTime","dt","spanId","traceId","spanTimestamp","timestamp","gql","parsedOrigin","search","SUPPORTABILITY_METRIC_CHANNEL","spaNode","interactionId","options","payloadObjs","slice","events","chunks","eventChunks","arr","chunkSize","len","Chunk","splitChunks","tooBig","currentChunk","fields","insert","_objectSpread","jsAttributes","AggregateBase","_defineProperty","o","allowArrayLike","it","Symbol","iterator","F","_e","TypeError","normalCompletion","didErr","step","next","_e2"],"sourceRoot":""}